# Generated by Django 3.2.6 on 2023-10-06 08:18

from django.db import migrations, models
import django.db.models.deletion
import negbuyapi.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blogs_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images')),
                ('heading', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='buyer_returned_products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_type', models.CharField(blank=True, choices=[('DDP', 'DDP'), ('Ex-work', 'Ex-work')], max_length=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('returned', 'returned'), ('rejected', 'rejected')], max_length=10, null=True)),
                ('action', models.CharField(blank=True, max_length=100, null=True)),
                ('refund_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('breif_reason', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Buyer Returns',
            },
        ),
        migrations.CreateModel(
            name='DDP_Orders_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('buyer_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Shipped', 'Shipped'), ('On the Way', 'On the Way'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded')], default='Pending', max_length=20)),
                ('seller_status', models.CharField(choices=[('Schedule Pick Up', 'Schedule Pick Up'), ('Unshipped', 'Unshipped'), ('Shipped', 'Shipped'), ('Shipped - Arrived at Negbuy', 'Shipped - Arrived at Negbuy'), ('Shipped - Shipped from Negbuy', 'Shipped - Shipped from Negbuy'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Unshipped', max_length=30)),
                ('product_price', models.FloatField(max_length=20)),
                ('quantity', models.IntegerField(default=1)),
                ('payment_id', models.CharField(max_length=100)),
                ('payment_method', models.CharField(blank=True, choices=[('Wallet', 'Wallet'), ('UPI', 'UPI'), ('Debit Card', 'Debit Card'), ('Credit Card', 'Credit Card'), ('Net Baking', 'Netbanking')], max_length=20, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('billing_address', models.TextField(blank=True, null=True)),
                ('is_ship_bill_add_same', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=True, max_length=10)),
                ('seller_shipped_on', models.DateTimeField(blank=True, null=True)),
                ('arrived_at_negbuy', models.DateTimeField(blank=True, null=True)),
                ('buyer_shipped_on', models.DateTimeField(blank=True, null=True)),
                ('buyer_out_for_delivery', models.DateTimeField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('company_courier_id', models.IntegerField(blank=True, null=True)),
                ('company_courier_name', models.CharField(blank=True, max_length=50, null=True)),
                ('expected_delivery_date', models.CharField(blank=True, max_length=50, null=True)),
                ('transport_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('courier_charges', models.FloatField(blank=True, null=True)),
                ('total_weight', models.IntegerField(blank=True, null=True)),
                ('gst', models.FloatField(blank=True, null=True)),
                ('service_charge', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('shiprocket_oder_id', models.CharField(blank=True, max_length=50, null=True)),
                ('shiprocket_shipment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('awb_no', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'DDP Orders',
            },
        ),
        migrations.CreateModel(
            name='Exwork_Orders_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('buyer_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Confirmed', 'Confirmed'), ('Ready For Pick Up', 'Ready For Pick Up'), ('Picked Up', 'Picked Up'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded')], default='Pending', max_length=20)),
                ('seller_status', models.CharField(choices=[('Pending', 'Pending'), ('Schedule Pick Up', 'Schedule Pick Up'), ('Unshipped', 'Unshipped'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('product_price', models.FloatField(max_length=20)),
                ('quantity', models.IntegerField(default=1)),
                ('docket_number', models.CharField(blank=True, max_length=100, null=True)),
                ('docket_file', models.FileField(blank=True, null=True, upload_to='exwork-logistics-doc')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('Wallet', 'Wallet'), ('UPI', 'UPI'), ('Debit Card', 'Debit Card'), ('Credit Card', 'Credit Card'), ('Net Baking', 'Netbanking')], max_length=20, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('billing_address', models.TextField(blank=True, null=True)),
                ('is_ship_bill_add_same', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=True, max_length=10)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('transport_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('total_weight', models.IntegerField(blank=True, null=True)),
                ('gst', models.FloatField(blank=True, null=True)),
                ('service_charge', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('seller_shipped_on', models.DateTimeField(blank=True, null=True)),
                ('arrived_at_negbuy', models.DateTimeField(blank=True, null=True)),
                ('expected_delivery_date', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ex-Work Orders',
            },
        ),
        migrations.CreateModel(
            name='FileTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads')),
            ],
        ),
        migrations.CreateModel(
            name='HomePage_Poster_Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.FileField(upload_to='homepage_brands_posters_images')),
                ('choice', models.CharField(choices=[('brand', 'brand'), ('poster', 'poster')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Brands and Posters for Homepage',
            },
        ),
        migrations.CreateModel(
            name='Negbuy_Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Negbuy Warehouse',
            },
        ),
        migrations.CreateModel(
            name='port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('country', models.CharField(blank=True, max_length=1000, null=True)),
                ('latitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('longitude', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Port',
            },
        ),
        migrations.CreateModel(
            name='productCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('app_name', models.CharField(blank=True, max_length=50, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='category_images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='ProductColorVariations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_variant', models.BooleanField(default=False)),
                ('color', models.CharField(blank=True, max_length=500, null=True)),
                ('main_image', models.ImageField(blank=True, default=None, null=True, upload_to='main_images')),
            ],
            options={
                'verbose_name_plural': 'Product Color Variations',
            },
        ),
        migrations.CreateModel(
            name='ProductDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_sku_id', models.CharField(blank=True, max_length=100, null=True)),
                ('product_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=1000, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('packing_address', models.TextField(blank=True, null=True)),
                ('brand', models.CharField(blank=True, max_length=500, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='product_videos')),
                ('detailed_description', models.TextField(blank=True, null=True)),
                ('transportation_port', models.CharField(blank=True, max_length=500, null=True)),
                ('verification_status', models.CharField(choices=[('draft', 'draft'), ('verified', 'verified'), ('under verification', 'under verification'), ('rejected', 'rejected'), ('deleted', 'deleted')], default='draft', max_length=100)),
                ('price_choice', models.CharField(blank=True, choices=[('Add Price', 'Add Price'), ('Price according to quantity', 'Price according to quantity')], default='Add Price', max_length=100, null=True)),
                ('sale_startdate', models.CharField(blank=True, max_length=1000, null=True)),
                ('sale_enddate', models.CharField(blank=True, max_length=1000, null=True)),
                ('verify_reject_date', models.DateTimeField(blank=True, null=True)),
                ('gst', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productcategory')),
            ],
            options={
                'verbose_name_plural': 'Product DB',
            },
        ),
        migrations.CreateModel(
            name='ProductSizeVariations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=500, null=True)),
                ('mrp', models.FloatField(blank=True, max_length=500, null=True)),
                ('selling_price', models.FloatField(blank=True, max_length=500, null=True)),
                ('sale_price', models.FloatField(blank=True, max_length=500, null=True)),
                ('weight', models.FloatField(blank=True, max_length=500, null=True)),
                ('packing_details', models.TextField(blank=True, max_length=10000, null=True)),
                ('dim_length', models.FloatField(blank=True, null=True)),
                ('dim_width', models.FloatField(blank=True, null=True)),
                ('dim_height', models.FloatField(blank=True, null=True)),
                ('manufacturing_time', models.IntegerField(blank=True, null=True)),
                ('max_order_quantity', models.CharField(blank=True, max_length=500, null=True)),
                ('main_size', models.BooleanField(default=False)),
                ('variant_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productcolorvariations')),
            ],
            options={
                'verbose_name_plural': 'Product Size Variations',
            },
        ),
        migrations.CreateModel(
            name='review_db',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_title', models.CharField(blank=True, default=None, max_length=1000)),
                ('review_description', models.CharField(blank=True, default=None, max_length=1000)),
                ('rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('main_product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
            ],
            options={
                'verbose_name_plural': 'Product Reviews',
            },
        ),
        migrations.CreateModel(
            name='rfq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement', models.CharField(blank=True, max_length=1000, null=True)),
                ('target_price', models.IntegerField(blank=True, null=True)),
                ('quantity', models.CharField(blank=True, max_length=1000, null=True)),
                ('delivery_expected_date', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('ongoing', 'ongoing'), ('closed', 'closed'), ('completed', 'completed')], default='ongoing', max_length=20)),
                ('rfq_status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=20)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'RFQs',
            },
        ),
        migrations.CreateModel(
            name='test_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='test_images')),
            ],
            options={
                'verbose_name_plural': 'test_image',
            },
        ),
        migrations.CreateModel(
            name='userDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=50, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='/profile_images/default.jpg', null=True, upload_to='profile_images')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('role', models.CharField(choices=[('Seller', 'Seller'), ('Buyer', 'Buyer'), ('Admin', 'Admin')], default='Buyer', max_length=50)),
                ('auth', models.BooleanField(default=True)),
                ('seller_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=1000, null=True)),
                ('address_verified', models.BooleanField(default=False)),
                ('document_verification', models.ImageField(blank=True, null=True, upload_to='Documents_images')),
                ('gst_number', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=1000, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=1000, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('countrycode', models.CharField(blank=True, max_length=2, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('search_count', models.IntegerField(default=0)),
                ('recently_viewed_products', models.ManyToManyField(blank=True, null=True, to='negbuyapi.ProductDB')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Wishlist_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_id', to='negbuyapi.userdb')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
                ('seller_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seller_id', to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Wishlist DB',
            },
        ),
        migrations.CreateModel(
            name='ViewsTrackingDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_searched_clicks', models.IntegerField(default=0)),
                ('total_other_clicks', models.IntegerField(default=0)),
                ('total_screen_time', models.FloatField(default=0)),
                ('last_week_screen_time', models.FloatField(default=0)),
                ('browser_views', models.IntegerField(default=0)),
                ('app_views', models.IntegerField(default=0)),
                ('hourly_views', models.TextField(default=negbuyapi.models.get_hrs)),
                ('daily_views', models.TextField(default=negbuyapi.models.get_day)),
                ('monthly_views', models.TextField(default=negbuyapi.models.get_month)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('main_product_id', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
            ],
            options={
                'verbose_name_plural': 'Views Tracking DB',
            },
        ),
        migrations.CreateModel(
            name='SubSkuIdDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_sku_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('product_id', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productsizevariations')),
            ],
            options={
                'verbose_name_plural': 'Sub-SKU IDs',
            },
        ),
        migrations.CreateModel(
            name='SellerRfqReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='rfq_reply_files')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rfq_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.rfq')),
                ('seller_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Seller RFQ Reply',
            },
        ),
        migrations.CreateModel(
            name='SellerNoticeBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField()),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('sender', models.CharField(choices=[('admin', 'admin'), ('negbuy', 'negbuy'), ('other', 'other')], default='admin', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seller_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Seller Notice Board',
            },
        ),
        migrations.AddField(
            model_name='rfq',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.userdb'),
        ),
        migrations.CreateModel(
            name='Review_Images_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='product_review_files')),
                ('review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.review_db')),
            ],
            options={
                'verbose_name_plural': 'Review Images and Videos',
            },
        ),
        migrations.AddField(
            model_name='review_db',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.userdb'),
        ),
        migrations.CreateModel(
            name='return_images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='return_images')),
                ('return_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.buyer_returned_products')),
            ],
            options={
                'verbose_name_plural': 'Buyer Returns Images',
            },
        ),
        migrations.CreateModel(
            name='Purchase_Process_DP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('order_type', models.CharField(blank=True, max_length=10, null=True)),
                ('transport_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('delivery_address', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('company_courier_id', models.IntegerField(blank=True, null=True)),
                ('company_courier_name', models.CharField(blank=True, max_length=50, null=True)),
                ('courier_charges', models.FloatField(blank=True, null=True)),
                ('estimated_delivery_days', models.IntegerField(blank=True, null=True)),
                ('total_weight', models.IntegerField(blank=True, null=True)),
                ('gst', models.FloatField(blank=True, null=True)),
                ('service_charge', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('ongoing', 'ongoing'), ('failed', 'failed'), ('success', 'success')], max_length=10, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('processing', 'processing'), ('done', 'done')], default='active', max_length=20)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('razorpay_currency', models.CharField(blank=True, max_length=50, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.productsizevariations')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventoryDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productsizevariations')),
            ],
            options={
                'verbose_name_plural': 'Product Inventory DB',
            },
        ),
        migrations.CreateModel(
            name='ProductImageDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='New_Images')),
                ('heading', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('main_product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
            ],
            options={
                'verbose_name_plural': 'Product Image Description',
            },
        ),
        migrations.CreateModel(
            name='ProductExtraImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='Product_images')),
                ('variant_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productcolorvariations')),
            ],
            options={
                'verbose_name_plural': 'Product Extra Images',
            },
        ),
        migrations.CreateModel(
            name='ProductEditRemarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('New', 'New'), ('Updated', 'Updated'), ('Resolved', 'Resolved'), ('Unresolved', 'Unresolved'), ('Rejected', 'Rejected')], default='New', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('main_product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
                ('seller_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Product Edit Remarks',
            },
        ),
        migrations.CreateModel(
            name='ProductDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('main_product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb')),
            ],
            options={
                'verbose_name_plural': 'Product Details',
            },
        ),
        migrations.AddField(
            model_name='productdb',
            name='seller_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='productcolorvariations',
            name='main_product_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productdb'),
        ),
        migrations.CreateModel(
            name='ProductBulkPurchaseDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.IntegerField(blank=True, null=True)),
                ('max_quantity', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('manufacturing_time', models.IntegerField(blank=True, null=True)),
                ('product_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.productsizevariations')),
            ],
            options={
                'verbose_name_plural': 'Product Bulk Purchase Details',
            },
        ),
        migrations.CreateModel(
            name='primary_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('prod_category', models.ManyToManyField(to='negbuyapi.productCategory')),
            ],
            options={
                'verbose_name_plural': 'Primary Category',
            },
        ),
        migrations.CreateModel(
            name='Pick_Up_Schedules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.CharField(blank=True, max_length=20, null=True)),
                ('dim_lenght', models.CharField(blank=True, max_length=20, null=True)),
                ('dim_width', models.CharField(blank=True, max_length=20, null=True)),
                ('dim_height', models.CharField(blank=True, max_length=20, null=True)),
                ('pick_up_time1', models.DateTimeField(blank=True, null=True)),
                ('pick_up_time2', models.DateTimeField(blank=True, null=True)),
                ('ddp_order_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.ddp_orders_db')),
                ('exwork_order_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.exwork_orders_db')),
            ],
        ),
        migrations.AddField(
            model_name='exwork_orders_db',
            name='exwork_buyer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exwork_buyer_id', to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='exwork_orders_db',
            name='exwork_seller_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exwork_seller_id', to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='exwork_orders_db',
            name='product_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.productsizevariations'),
        ),
        migrations.CreateModel(
            name='Detailed_blogs_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Detailed_blogs', to='negbuyapi.blogs_db')),
            ],
            options={
                'verbose_name_plural': 'Detailed_blogs',
            },
        ),
        migrations.AddField(
            model_name='ddp_orders_db',
            name='ddp_buyer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ddp_buyer_id', to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='ddp_orders_db',
            name='ddp_seller_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ddp_seller_id', to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='ddp_orders_db',
            name='product_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.productsizevariations'),
        ),
        migrations.CreateModel(
            name='BuyerNoticeBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField()),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('sender', models.CharField(choices=[('admin', 'admin'), ('negbuy', 'negbuy'), ('other', 'other')], default='admin', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Buyer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Buyer Notice Board',
            },
        ),
        migrations.AddField(
            model_name='buyer_returned_products',
            name='Exwork_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.exwork_orders_db'),
        ),
        migrations.AddField(
            model_name='buyer_returned_products',
            name='buyer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.userdb'),
        ),
        migrations.AddField(
            model_name='buyer_returned_products',
            name='ddp_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='negbuyapi.ddp_orders_db'),
        ),
        migrations.CreateModel(
            name='bankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountName', models.CharField(blank=True, max_length=1000, null=True)),
                ('accountNumber', models.CharField(blank=True, max_length=1000, null=True)),
                ('accountIfsc', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bankDetails', to='negbuyapi.userdb')),
            ],
            options={
                'verbose_name_plural': 'Bank',
            },
        ),
    ]
